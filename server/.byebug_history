c
y_min
y_max
x_min
x_max
count
distance
c
x_max
x_min
Placement.count
count
length
distance
c
Placement.between(x_min -1, y_min -1, x_max +1, y_max +1).where.not({x: x_min -1, y: y_max +1 })
Placement.between(x_min -1, y_min -1, x_max +1, y_max +1).where.not({x: x_min -1 })
Placement.between(x_min -1, y_min -1, x_max +1, y_max +1).where.not({x: 1400 })
Placement.between(x_min -1, y_min -1, x_max +1, y_max +1)
c
Placement.between(x_min -1, y_min -1, x_max +1, y_max +1)
c
Placement.between(x_min -1, y_min -1, x_max +1, 100)
Placement.between(x_min -1, y_min -1, x_max +1, y_max +1)
Placement.between(x_min -1, y_min -1, x_max +1, y_max +1).where.not({x: 1400 })
Placement.between(x_min -1, y_min -1, x_max +1, y_max +1).where.not({x :1400 })
Placement.between(x_min -1, y_min -1, x_max +1, y_max +1).not_at(x_min -10, y_max + 1)
touching
c
touching
c
Placement.between(x_min -1, y_min -1, x_max +1, y_max +1).not_at(x_min -10, y_max + 1)
Placement.between(x_min -1, y_min -1, x_max +1, y_max +1).not_at(x_min -1, y_max + 1)
Placement.between(x_min -1, y_min -1, x_max +1, y_max +1)
Placement.between(x_min, y_min, x_max, y_max)
Placement.last
c
Placement.last
Placement.between(x_min, y_min, x_max, y_max)
l
Placement.between(x_min, y_min, x_max, y_max)
touching
c
touching
c
y_max
y_min
x_max
x_min
Placement.between(12, 16, 14, 18)
touching
Placement.last
y_max
x_max
touching
c
touching
c
touching
c
touching
c
touching
c
touching
c
touching
c
touching
c
touching
c
touching
c
touching
c
touching
c
@errors
@errors.empty?
c
@errors.empty?
c
@errors.empty?
@errors
c
Player
c
placement_params["placements"].map
placement_params["placements"]
placement_params
c
move.placements
move
c
new_move.errors
new_move.save
new_move
c
move
c
words.all? { |w| valid? w }
$dictionary.include? "care"
dictionary.include? "care"
dictionary["care"]
words
c
move
c
$dictionary
dictionary
valid? "care"
valid? 
words
c
move
c
results.map { |r| r['string_agg'] }
results[0]
c
results
c
results[2]
c
results[2]
c
results[2]
c
results[2]
q
results[2]
results[0]
results[1]
results[5]
results[7]
q
results[7]
results[6]
results[5]
results[4]
results[3]
results[2]
results[1]
results[0]
c
results[0]
results[1]
results[2]
results[3]
results[4]
results[5]
c
results[]
results[5]
results[4]
results[3]
results[2]
results[1]
results[0]
c
results
c
exit
Letter.last
q
x.values
x.inspect
x.column_values
x.ntuples
x.methods
x
exit
c
Letter.pluck :y
x_idx
c
send :l
l
x_idx
Letter.pluck :y
c
Letter.pluck :y
c
x_idx
y_idx
Letter.pluck :y
Letter.pluck :x
Letter.count
Letter.last(3)
c
Letter.last(3)
exit
Letter.last(3)
exit
c
Letter.last(3)
Letter.last(2)
Letter.last
c
Letter.last
c
exit
eot
\q
o
r
q
Letter.last
